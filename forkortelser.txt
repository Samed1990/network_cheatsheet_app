📘 Forkortelser i datakommunikasjon (INFT1007)

 Lenkelaget (Layer 2):
* VLAN - Virtual LAN: Logisk nettverk innenfor fysisk nettverk, skiller trafikk uten ekstra kabler.
* MAC - Media Access Control: Unik fysisk adresse brukt for lokal levering av rammer.
* ARP - Address Resolution Protocol: Oversetter IP-adresser til MAC-adresser.
* LLC - Logical Link Control: Gir grensesnitt mot nettverkslaget og styrer multipleksering.
* PPP - Point-to-Point Protocol: Brukes til direkte forbindelser mellom to noder, ofte i modemforbindelser.
* CSMA/CD - Carrier Sense Multiple Access with Collision Detection: Ethernet-teknikk for å oppdage kollisjoner.
* CSMA/CA - Collision Avoidance: WiFi-teknikk som forsøker å unngå kollisjoner.
🟢 CSMA/CD – brukes i kablet Ethernet
En enhet lytter på linja (Carrier Sense)

Hvis det er stille, begynner den å sende

Hvis to enheter sender samtidig → kollisjon

Kollisjon oppdages, og begge stopper, venter tilfeldig tid og prøver igjen

📌 Brukt i Ethernet med hub (delt medium), ikke lenger aktuelt i moderne svitsjede nettverk

🟡 CSMA/CA – brukes i WiFi
Enhet lytter før sending

Sender ikke umiddelbart – venter først en tilfeldig periode

Sender valgfritt en RTS (Request to Send) – mottaker svarer med CTS (Clear to Send)

Når det er klart, sendes pakken – uten å være sikker på at ingen andre sender samtidig

📌 Brukt i trådløse nettverk, fordi man ikke kan høre mens man sender
I kablet nettverk (Ethernet med svitsj):
👉 CSMA/CD trengs ikke lenger, fordi hver enhet har sitt eget kollisjonsfrie medium (full dupleks).
👉 Moderne Ethernet bypasser hele CSMA/CD.

I trådløse nettverk (WiFi):
👉 CSMA/CA er nødvendig, fordi man ikke kan høre og sende samtidig.
👉 Det forhindrer kollisjoner, som er veldig dyre i trådløse medium.

🧠 Konklusjon:
CSMA/CD var en smart løsning for kabelnett med delt medium, men er i praksis utdatert i dag.

CSMA/CA er mer komplisert, men fortsatt kritisk i moderne WiFi – det gjør det mulig for flere å dele det trådløse mediet uten for mange kollisjoner.

* RTS/CTS - Request To Send / Clear To Send: Kontrollmekanisme i trådløs kommunikasjon for å reservere kanal.
* FCS - Frame Check Sequence: Brukes til å sjekke om rammen er mottatt med feil.
* CRC - Cyclic Redundancy Check: Feildeteksjon brukt i Ethernet-rammer.
* DTP - Dynamic Trunking Protocol: Forhandler trunk-forbindelse mellom svitsjer.
* VTP - VLAN Trunking Protocol: Distribuerer VLAN-konfigurasjon til flere svitsjer.
* STP - Spanning Tree Protocol: Forhindrer løkker i nettverk ved å deaktivere enkelte forbindelser.
* CDP - Cisco Discovery Protocol: Cisco-protokoll for å oppdage andre Cisco-enheter.
* MTU - Maximum Transmission Unit: Maksimalt antall byte som kan sendes i én ramme.

 Nettverkslaget (Layer 3):
* IP - Internet Protocol: Brukes til å adressere og rute pakker mellom nettverk.
* ISP - Internet Service Provider: Tilbyr internettforbindelse og ruter trafikk mot eksterne nett.
* ICMP - Internet Control Message Protocol: Brukes til feilmeldinger og diagnostikk (f.eks. ping).
* BGP - Border Gateway Protocol: Brukes mellom autonome systemer for ruting på Internett.
* OSPF - Open Shortest Path First: Brukes til intern ruting i større nettverk.
* RIP - Routing Information Protocol: Enkel ruteprotokoll basert på hop-count.
* NAT - Network Address Translation: Oversetter mellom private og offentlige IP-adresser.
* PAT - Port Address Translation: Utvider NAT med portnummer for flere samtidige forbindelser.
* ACL - Access Control List: Brukes til å filtrere trafikk basert på IP, port eller protokoll.
* QoS - Quality of Service: Prioriterer trafikk for bedre ytelse for viktige tjenester.
* MPLS - Multiprotocol Label Switching: Ruter pakker basert på etiketter i stedet for IP-adresser.
* DMZ - Demilitarized Zone: Del av nettverk som isolerer offentlige tjenester fra internt nett.

 Transportlaget (Layer 4):
* TCP - Transmission Control Protocol: Pålitelig og ordnet levering av data.
* UDP - User Datagram Protocol: Rask, upålitelig dataoverføring uten forbindelse.
* TLS - Transport Layer Security: Krypteringsprotokoll brukt i HTTPS.
* SSL - Secure Sockets Layer: Eldre krypteringsprotokoll for sikker kommunikasjon.
* ACK - Acknowledgement: Brukes til å bekrefte mottak av data.
* SYN - Synchronize: Første steg i TCPs treveis håndtrykk.
* FIN - Finish: TCP-flagg som avslutter forbindelsen.

 Applikasjonslaget (Layer 7):
* HTTP - HyperText Transfer Protocol: Brukes av nettlesere til å hente nettsider.
* HTTPS - HTTP Secure: Kryptert versjon av HTTP via TLS.
* DNS - Domain Name System: Slår opp domenenavn og returnerer IP-adresser.
* DHCP - Dynamic Host Configuration Protocol: Tildeler automatisk IP-adresser til klienter.
* SMTP - Simple Mail Transfer Protocol: Brukes til å sende e-post.
* POP3 - Post Office Protocol v3: Laster ned e-post fra server til klient.
* IMAP - Internet Message Access Protocol: Gir tilgang til e-post på server uten å laste ned.
* FTP - File Transfer Protocol: Overfører filer mellom klient og tjener.
* TFTP - Trivial File Transfer Protocol: Enkel filoverføring uten pålogging.
* SSID - Service Set Identifier: Navnet på et trådløst nettverk.
* WEP - Wired Equivalent Privacy: Tidlig og svak krypteringsprotokoll for WiFi.
* WPA - Wi-Fi Protected Access: Kryptering for trådløst nettverk.
* WPA2 - Wi-Fi Protected Access v2: Videreutviklet og sikrere enn WPA.
* URL - Uniform Resource Locator: Adressen til en ressurs på internett.
* VoIP - Voice over IP: Tale over IP-nettverk.
* ICANN - Internet Corporation for Assigned Names and Numbers: Administrerer domenenavn og IP-adresser.
* IETF - Internet Engineering Task Force: Utvikler åpne standarder for internett.
* IEEE - Institute of Electrical and Electronics Engineers: Utvikler nettverksstandarder som Ethernet.

 Diverse:
* PDU - Protocol Data Unit: Navn på datapakken på hvert lag i OSI-modellen.
* OSI - Open Systems Interconnection: Standardisert 7-lags kommunikasjonsmodell.
* DSL - Digital Subscriber Line: Internett-teknologi over telefonlinje.


📘 Binære vekter:

Binære vekter, som brukes for å forstå og regne ut nettmaske, antall IP-adresser og antall brukbare adresser i et subnett.

Når vi ser på én oktett i en IP-adresse (f.eks. 255.255.255.0), så kan vi tenke slik:


Bitplass	Binærverdi	Desimalverdi
1. bit	10000000	128
2. bit	01000000	64
3. bit	00100000	32
4. bit	00010000	16
5. bit	00001000	8
6. bit	00000100	4
7. bit	00000010	2
8. bit	00000001	1
Når du setter sammen 1-ere fra venstre og slutter når du kommer til 0-er, får du f.eks.:

11111111 = 255

11111100 = 252

11110000 = 240

11000000 = 192

Dette kalles nettmaskens desimalverdi, og forteller hvor mange biter som er "låst" til nettverk.

🧠 Slik bruker du det i praksis
Eksempel: IP = 192.168.1.0/26
Hva betyr /26?
Det betyr at 26 av 32 biter er nettverksbiter, resten er vertsbiter.
Du har altså 6 biter til host (32 - 26 = 6).

Hvor mange IP-adresser får du?
Formel: 2^antall host-biter
→ 2^6 = 64 IP-adresser totalt

Hvor mange brukbare IP-er får du?
Trekk fra 2: én til nettverksadresse, én til broadcast
→ 64 - 2 = 62 brukbare IP-adresser

Hvilken nettmaske tilsvarer /26?
De første 3 oktettene er 255 (8+8+8 = 24 biter), så vi trenger 2 biter til i den siste:
11000000 = 192
→ Nettmaske: 255.255.255.192

🔁 Oppsummert:

### CIDR-tabell

| CIDR (/x) | Host-biter | Antall IP-er | Brukbare | Nettmaske         |
|----------|-------------|--------------|----------|-------------------|
| /24      | 8           | 256          | 254      | 255.255.255.0     |
| /25      | 7           | 128          | 126      | 255.255.255.128   |
| /26      | 6           | 64           | 62       | 255.255.255.192   |
| /27      | 5           | 32           | 30       | 255.255.255.224   |
| /28      | 4           | 16           | 14       | 255.255.255.240   |
| /29      | 3           | 8            | 6        | 255.255.255.248   |


🧠 Hva er en IP-adresse?
IP-adressen er en logisk adresse som identifiserer en enhet på et nettverk, uansett hvor den er i verden.

Brukes på nettverkslaget (Layer 3).

En IP-adresse er unikt identifiserende innenfor et nettverk, og kan endres (f.eks. via DHCP).

Eksempel:
Din PC kan ha IP: 192.168.1.10, mens skriveren i nettverket har 192.168.1.50.

🧠 Hva er en MAC-adresse?
MAC-adressen er en fysisk, fast adresse som brikkes inn i nettverkskortet (som et serienummer).

Brukes på lenkelaget (Layer 2).

MAC står for Media Access Control og ser typisk slik ut: 3A:1B:4F:99:AB:22.

Endres ikke uten videre (men kan “forfalskes” eller “spoofes”).

🧩 Hvordan jobber IP og MAC sammen?
De jobber i to lag, og kommuniserer via ARP (Address Resolution Protocol):

🌐 1. Du vil sende data til 192.168.1.50
Din maskin vet bare IP-en, men trenger MAC-adressen for å sende rammen fysisk.

Den sender ut en ARP-forespørsel: "Hvem har IP 192.168.1.50?"

Svar kommer: "Jeg (MAC AA:BB:CC:DD:EE:FF) har den IP-en!"

Din maskin lagrer IP–MAC-par i ARP-tabellen og sender data.

📦 Det som skjer:

IP-adressen brukes for logisk ruting.

MAC-adressen brukes for fysisk levering i lokalnettet.
📬 Utvidet scenario: Du sender en e-post til Gmail
🖥️ Din PC har:
IP: 192.168.1.100

MAC: AA:AA:AA:AA:AA:AA

📡 Din lokale ruter har:
IP internt: 192.168.1.1, MAC: BB:BB:BB:BB:BB:BB

IP eksternt (mot internett): 203.0.113.2, MAC: CC:CC:CC:CC:CC:CC

📬 Gmail-server:
IP: 172.217.3.110

📦 Hva skjer når du trykker “Send”?
🔽 1. PC-en lager pakken
IP-pakke: Fra 192.168.1.100 → 172.217.3.110

Transport: SMTP-data over TCP

Lenkelag: trenger MAC-adresse til neste hopp

🔍 Men IP-en til Gmail er utenfor lokalnett, så: → PC-en sender den til default gateway = ruteren

PC gjør ARP og finner MAC-en til ruteren: BB:BB:BB:BB:BB:BB
📦 Ethernet-ramme blir:

MAC-destinasjon: BB:BB:BB:BB:BB:BB (ruterens MAC)
MAC-avsender: AA:AA:AA:AA:AA:AA
IP-destinasjon: 172.217.3.110
IP-avsender: 192.168.1.100
🔽 2. Ruter mottar rammen og åpner den
Den ser på IP-destinasjonen: 172.217.3.110

Vet: «Dette må jeg sende videre til ISP»

Den fjerner MAC-headeren og lager en ny Ethernet-ramme

🔁 3. Ny MAC-header – nytt hopp
La oss si ruteren sender pakken til neste ruter hos ISP:

Neste hopp IP: 203.0.113.1

Ruter gjør ARP → får MAC: DD:DD:DD:DD:DD:DD

📦 Ny ramme:

MAC-destinasjon: DD:DD:DD:DD:DD:DD
MAC-avsender: CC:CC:CC:CC:CC:CC
IP-destinasjon: 172.217.3.110
IP-avsender: 192.168.1.100
✅ Legg merke til:

MAC-adresser endres på hvert hopp (nytt lenkelag)

IP-adresser forblir de samme hele veien

🔁 4. Gjentas på hvert hopp i nettet

På hvert ledd i internett-rutingen skjer:

Ruteren mottar IP-pakken

Leser IP-header: “Hvor skal den?”

Finner neste ruter i rutetabellen

Gjør nytt ARP (eller bruker MAC-cache)

Pakker inn i ny ramme med ny MAC-destinasjon

Sender videre

🧠 Når når pakken Gmail?
Siste ruter i Google sitt nettverk:

Har IP og MAC til Gmail-serveren

Gjør siste ARP for MAC til 172.217.3.110

Sender rammen til serverens nettverkskort

🎯 Hovedpoeng:

Hva skjer?
Nettverkslaget - 	IP-adressene forblir uendret fra avsender til mottaker
Lenkelaget	- MAC-adressene endres for hvert hopp (hver ruter eller node)
ARP	- Brukes lokalt for å finne MAC til neste hopp

🧩 Virkelighetseksempel:
Tenk på det som å sende et brev via post:

IP-adressen er den endelige adressen på konvolutten

MAC-adressen er leveringsadressen til hvert postkontor underveis

Brevet (IP-pakken) ligger inni konvolutten (Ethernet-rammen), som pakkes om hver gang det sendes videre
